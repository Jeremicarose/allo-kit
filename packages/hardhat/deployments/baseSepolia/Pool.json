{
  "address": "0x5b86c5e6e56B305D0A83a729d01AB0Cb4D1cf036",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_schema",
          "type": "string"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address[]",
              "name": "admins",
              "type": "address[]"
            },
            {
              "internalType": "address",
              "name": "allocationToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "distributionToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "maxAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint64[]",
              "name": "timestamps",
              "type": "uint64[]"
            },
            {
              "internalType": "string",
              "name": "metadataURI",
              "type": "string"
            }
          ],
          "internalType": "struct PoolConfig",
          "name": "_config",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "Allocate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "updater",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address[]",
              "name": "admins",
              "type": "address[]"
            },
            {
              "internalType": "address",
              "name": "allocationToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "distributionToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "maxAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint64[]",
              "name": "timestamps",
              "type": "uint64[]"
            },
            {
              "internalType": "string",
              "name": "metadataURI",
              "type": "string"
            }
          ],
          "indexed": false,
          "internalType": "struct PoolConfig",
          "name": "config",
          "type": "tuple"
        }
      ],
      "name": "Configure",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "schema",
          "type": "string"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address[]",
              "name": "admins",
              "type": "address[]"
            },
            {
              "internalType": "address",
              "name": "allocationToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "distributionToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "maxAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint64[]",
              "name": "timestamps",
              "type": "uint64[]"
            },
            {
              "internalType": "string",
              "name": "metadataURI",
              "type": "string"
            }
          ],
          "indexed": false,
          "internalType": "struct PoolConfig",
          "name": "config",
          "type": "tuple"
        }
      ],
      "name": "Deployed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "project",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "metadataURI",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "Register",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "project",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "status",
          "type": "uint8"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "metadataURI",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "Review",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "project",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "updater",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "metadataURI",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "Update",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "recipients",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        }
      ],
      "name": "_allocate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_updater",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address[]",
              "name": "admins",
              "type": "address[]"
            },
            {
              "internalType": "address",
              "name": "allocationToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "distributionToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "maxAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint64[]",
              "name": "timestamps",
              "type": "uint64[]"
            },
            {
              "internalType": "string",
              "name": "metadataURI",
              "type": "string"
            }
          ],
          "internalType": "struct PoolConfig",
          "name": "_config",
          "type": "tuple"
        }
      ],
      "name": "_configure",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "recipients",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        }
      ],
      "name": "_distribute",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "project",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_metadataURI",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "_register",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "project",
          "type": "address"
        },
        {
          "internalType": "uint8",
          "name": "status",
          "type": "uint8"
        },
        {
          "internalType": "string",
          "name": "_metadataURI",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "_review",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "project",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_metadataURI",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "_update",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "config",
      "outputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "allocationToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "distributionToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "maxAmount",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "metadataURI",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address[]",
              "name": "admins",
              "type": "address[]"
            },
            {
              "internalType": "address",
              "name": "allocationToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "distributionToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "maxAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint64[]",
              "name": "timestamps",
              "type": "uint64[]"
            },
            {
              "internalType": "string",
              "name": "metadataURI",
              "type": "string"
            }
          ],
          "internalType": "struct PoolConfig",
          "name": "_config",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "registrations",
      "outputs": [
        {
          "internalType": "enum IPool.Status",
          "name": "status",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "metadataURI",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x01b470f648f75eb7c0154b7865cd59397993d25a05b67fb6a36520ef1c6fa2f1",
  "receipt": {
    "to": null,
    "from": "0x8595e36857743A1C517e00179e6bA6D170DD1F51",
    "contractAddress": "0x5b86c5e6e56B305D0A83a729d01AB0Cb4D1cf036",
    "transactionIndex": 9,
    "gasUsed": "1533138",
    "logsBloom": "0x
    "blockHash": "0x4e20d57cc9d1c3a33a0bb0c7a6e16156ba3fab4b316ed60a2891fdd029c4b55d",
    "transactionHash": "0x01b470f648f75eb7c0154b7865cd59397993d25a05b67fb6a36520ef1c6fa2f1",
    "logs": [
      {
        "transactionIndex": 9,
        "blockNumber": 26753084,
        "transactionHash": "0x01b470f648f75eb7c0154b7865cd59397993d25a05b67fb6a36520ef1c6fa2f1",
        "address": "0x5b86c5e6e56B305D0A83a729d01AB0Cb4D1cf036",
        "topics": [
          "0x432d5e51ce671e91daae7448ef02fde36fd474baf4f93d31ff4ace1ad9a1a6bd",
          "0x0000000000000000000000008595e36857743a1c517e00179e6ba6d170dd1f51"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008595e36857743a1c517e00179e6ba6d170dd1f5100000000000000000000000000000000000000000000000000000000000000e
        "logIndex": 53,
        "blockHash": "0x4e20d57cc9d1c3a33a0bb0c7a6e16156ba3fab4b316ed60a2891fdd029c4b55d"
      }
    ],
    "blockNumber": 26753084,
    "cumulativeGasUsed": "3401413",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "",
    "",
    {
      "owner": "0x8595e36857743A1C517e00179e6bA6D170DD1F51",
      "allocationToken": "0x0000000000000000000000000000000000000000",
      "distributionToken": "0x0000000000000000000000000000000000000000",
      "maxAmount": "0",
      "metadataURI": "",
      "admins": [],
      "timestamps": []
    }
  ],
  "numDeployments": 2,
  "solcInputHash": "be2a9ca12bddf2b0431d882d1c41cc21",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_schema\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"admins\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"allocationToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"distributionToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint64[]\",\"name\":\"timestamps\",\"type\":\"uint64[]\"},{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"}],\"internalType\":\"struct PoolConfig\",\"name\":\"_config\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Allocate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"updater\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"admins\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"allocationToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"distributionToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint64[]\",\"name\":\"timestamps\",\"type\":\"uint64[]\"},{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"}],\"indexed\":false,\"internalType\":\"struct PoolConfig\",\"name\":\"config\",\"type\":\"tuple\"}],\"name\":\"Configure\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"schema\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"admins\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"allocationToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"distributionToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint64[]\",\"name\":\"timestamps\",\"type\":\"uint64[]\"},{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"}],\"indexed\":false,\"internalType\":\"struct PoolConfig\",\"name\":\"config\",\"type\":\"tuple\"}],\"name\":\"Deployed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"project\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Register\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"project\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"status\",\"type\":\"uint8\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Review\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"project\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"updater\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Update\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"_allocate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_updater\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"admins\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"allocationToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"distributionToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint64[]\",\"name\":\"timestamps\",\"type\":\"uint64[]\"},{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"}],\"internalType\":\"struct PoolConfig\",\"name\":\"_config\",\"type\":\"tuple\"}],\"name\":\"_configure\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"_distribute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"project\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_metadataURI\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"_register\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"project\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"_metadataURI\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"_review\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"project\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_metadataURI\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"_update\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"config\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"allocationToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"distributionToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"admins\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"allocationToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"distributionToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint64[]\",\"name\":\"timestamps\",\"type\":\"uint64[]\"},{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"}],\"internalType\":\"struct PoolConfig\",\"name\":\"_config\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"registrations\",\"outputs\":[{\"internalType\":\"enum IPool.Status\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Pool.sol\":\"Pool\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"contracts/Pool.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport { IERC20 } from \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\nstruct PoolConfig {\\n    address owner;\\n    address[] admins;\\n    address allocationToken;\\n    address distributionToken;\\n    uint256 maxAmount;\\n    uint64[] timestamps;\\n    string metadataURI;\\n}\\n\\ninterface IPool {\\n    enum Status {\\n        pending,\\n        approved,\\n        rejected\\n    }\\n\\n    struct Registration {\\n        Status status;\\n        address owner;\\n        string metadataURI;\\n        bytes data; // Data can contain information that can be accessed later\\n    }\\n\\n    event Deployed(string name, address indexed owner, string schema, PoolConfig config);\\n    event Allocate(address indexed from, address indexed to, uint256 amount, address token, bytes data);\\n    event Register(address indexed project, address indexed owner, string metadataURI, bytes data);\\n    event Review(address indexed project, uint8 status, address indexed approver, string metadataURI, bytes data);\\n    event Update(address indexed project, address indexed updater, string metadataURI, bytes data);\\n    event Configure(address indexed updater, PoolConfig config);\\n\\n    function initialize(PoolConfig memory config, bytes memory data) external;\\n    function _configure(address updater, PoolConfig memory config) external;\\n    function _register(address project, string memory metadataURI, bytes memory data) external;\\n    function _update(address project, string memory metadataURI, bytes memory data) external;\\n    function _review(address project, uint8 status, string memory metadataURI, bytes memory data) external;\\n    function _allocate(\\n        address[] memory recipients,\\n        uint256[] memory amounts,\\n        address token,\\n        bytes[] memory data\\n    ) external;\\n    function _distribute(\\n        address[] memory recipients,\\n        uint256[] memory amounts,\\n        address token,\\n        bytes[] memory data\\n    ) external;\\n}\\n\\n/*\\nTypes of Pools:\\nDirectGrants - pool manager transfer funds directly to projects\\nRetroFunding - selected voters vote on projects and pool gets distributed based on the votes\\nQuadraticFunding - people vote with money tokens and get matching funds from the pool based on quadratic formula\\nDedicatedDomainAllocation - selected panel of domain experts decide what projects receive matching funds\\nRFPs\\nBounties\\nCrowdfunding\\n*/\\ncontract Pool is IPool {\\n    bool private _initialized;\\n    PoolConfig public config;\\n\\n    mapping(address => Registration) public registrations;\\n\\n    constructor(string memory _name, string memory _schema, PoolConfig memory _config) {\\n        emit Deployed(_name, msg.sender, _schema, _config);\\n    }\\n\\n    function initialize(PoolConfig memory _config, bytes memory) external virtual {\\n        require(!_initialized, \\\"Already initialized\\\");\\n        _initialized = true;\\n        config = _config;\\n    }\\n\\n    function _configure(address _updater, PoolConfig memory _config) external virtual {\\n        // Logic for updating the Pool handled in calling contract\\n        emit Configure(_updater, _config);\\n    }\\n\\n    // MetadataURI contain details about project application\\n    function _register(address project, string memory _metadataURI, bytes memory data) public {\\n        require(registrations[project].owner == address(0), \\\"Already registered\\\");\\n        registrations[project] = Registration(Status.pending, msg.sender, _metadataURI, data);\\n        emit Register(project, msg.sender, _metadataURI, data);\\n    }\\n\\n    function _review(address project, uint8 status, string memory _metadataURI, bytes memory data) public virtual {\\n        Registration storage registration = registrations[project];\\n        require(registration.status != Status.approved, \\\"Already approved\\\");\\n        registration.status = Status(status);\\n        // MetadataURI can contain information about review, or potential rejection reason\\n        emit Review(project, status, msg.sender, _metadataURI, data);\\n    }\\n\\n    function _update(address project, string memory _metadataURI, bytes memory data) public {\\n        require(registrations[project].owner == msg.sender, \\\"Must be owner to update\\\");\\n        registrations[project].metadataURI = _metadataURI;\\n        registrations[project].data = data;\\n        emit Update(project, msg.sender, _metadataURI, data);\\n    }\\n\\n    // Allocate tokens to recipients (transfers tokens from caller to recipients)\\n    // This can be used to transfer tokens to projects, or the contract itself to fund with matching funds for example\\n    function _allocate(\\n        address[] memory recipients,\\n        uint256[] memory amounts,\\n        address token,\\n        bytes[] memory data\\n    ) public virtual {\\n        uint256 length = recipients.length;\\n        require(length > 0 && length == amounts.length, \\\"Mismatched lengths\\\");\\n\\n        for (uint256 i = 0; i < length; i++) {\\n            bytes memory _data = i < data.length ? data[i] : bytes(\\\"\\\");\\n            require(recipients[i] != address(0), \\\"Recipient is zero address\\\");\\n            require(amounts[i] > 0, \\\"Amount is zero\\\");\\n            _beforeAllocate(recipients[i], amounts[i], token, _data);\\n            IERC20(token).transferFrom(msg.sender, recipients[i], amounts[i]);\\n            emit Allocate(msg.sender, recipients[i], amounts[i], token, _data);\\n        }\\n    }\\n\\n    // Distribute tokens to recipients (transfers tokens from the contract to recipients)\\n    // Can be used to distribute matching funds to projects\\n    function _distribute(\\n        address[] memory recipients,\\n        uint256[] memory amounts,\\n        address token,\\n        bytes[] memory data\\n    ) public virtual {\\n        uint256 length = recipients.length;\\n        require(length > 0 && length == amounts.length, \\\"Mismatched lengths\\\");\\n\\n        for (uint256 i = 0; i < length; i++) {\\n            bytes memory _data = i < data.length ? data[i] : bytes(\\\"\\\");\\n            require(recipients[i] != address(0), \\\"Recipient is zero address\\\");\\n            require(\\n                amounts[i] > 0 && amounts[i] <= IERC20(token).balanceOf(address(this)),\\n                \\\"Amount is zero or exceeds balance\\\"\\n            );\\n            _beforeDistribute(recipients[i], amounts[i], token, _data);\\n            IERC20(token).transfer(recipients[i], amounts[i]);\\n            emit Allocate(address(this), recipients[i], amounts[i], token, _data);\\n        }\\n    }\\n\\n    function _beforeAllocate(address recipient, uint256 amount, address token, bytes memory data) internal virtual {}\\n    function _beforeDistribute(address recipient, uint256 amount, address token, bytes memory data) internal virtual {}\\n}\\n\",\"keccak256\":\"0x6cc17f33a56395c1e12c27e6bbf53dfc3041f13a40d88699db79200d27f63e1c\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162001fe438038062001fe48339810160408190526200003491620002ca565b336001600160a01b03167f432d5e51ce671e91daae7448ef02fde36fd474baf4f93d31ff4ace1ad9a1a6bd848484604051620000739392919062000494565b60405180910390a2505050620005a8565b634e487b7160e01b600052604160045260246000fd5b60405160e081016001600160401b0381118282101715620000bf57620000bf62000084565b60405290565b604051601f8201601f191681016001600160401b0381118282101715620000f057620000f062000084565b604052919050565b60005b8381101562000115578181015183820152602001620000fb565b50506000910152565b600082601f8301126200013057600080fd5b81516001600160401b038111156200014c576200014c62000084565b62000161601f8201601f1916602001620000c5565b8181528460208386010111156200017757600080fd5b6200018a826020830160208701620000f8565b949350505050565b80516001600160a01b0381168114620001aa57600080fd5b919050565b60006001600160401b03821115620001cb57620001cb62000084565b5060051b60200190565b600082601f830112620001e757600080fd5b8151602062000200620001fa83620001af565b620000c5565b82815260059290921b840181019181810190868411156200022057600080fd5b8286015b848110156200024657620002388162000192565b835291830191830162000224565b509695505050505050565b600082601f8301126200026357600080fd5b8151602062000276620001fa83620001af565b82815260059290921b840181019181810190868411156200029657600080fd5b8286015b84811015620002465780516001600160401b0381168114620002bc5760008081fd5b83529183019183016200029a565b600080600060608486031215620002e057600080fd5b83516001600160401b0380821115620002f857600080fd5b62000306878388016200011e565b945060208601519150808211156200031d57600080fd5b6200032b878388016200011e565b935060408601519150808211156200034257600080fd5b9085019060e082880312156200035757600080fd5b620003616200009a565b6200036c8362000192565b81526020830151828111156200038157600080fd5b6200038f89828601620001d5565b602083015250620003a36040840162000192565b6040820152620003b66060840162000192565b60608201526080830151608082015260a083015182811115620003d857600080fd5b620003e68982860162000251565b60a08301525060c083015182811115620003ff57600080fd5b6200040d898286016200011e565b60c0830152508093505050509250925092565b600081518084526200043a816020860160208601620000f8565b601f01601f19169290920160200192915050565b600081518084526020808501945080840160005b83811015620004895781516001600160401b03168752958201959082019060010162000462565b509495945050505050565b606081526000620004a9606083018662000420565b602083820381850152620004be828762000420565b848103604086015285516001600160a01b0390811682528287015160e084840181905281519084018190529294508301916000906101008601905b808310156200051d57845184168252938501936001929092019190850190620004f9565b50604089015194506200053b60408701866001600160a01b03169052565b606089015194506200055860608701866001600160a01b03169052565b6080890151608087015260a0890151945085810360a08701526200057d81866200044e565b94505050505060c085015182820360c08401526200059c828262000420565b98975050505050505050565b611a2c80620005b86000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c806379502c551161006657806379502c55146100e657806379b881af14610108578063942e6bcf1461011b5780639cdd2f9a1461013e578063ab21f5071461015157600080fd5b80631cf30254146100985780632628fb1c146100ad5780635587a37e146100c05780635cf90985146100d3575b600080fd5b6100ab6100a636600461109f565b610164565b005b6100ab6100bb36600461123f565b610265565b6100ab6100ce366004611461565b6105fc565b6100ab6100e13660046114ae565b610641565b6100ee61074d565b6040516100ff959493929190611567565b60405180910390f35b6100ab6101163660046114ae565b610800565b61012e6101293660046115ad565b610957565b6040516100ff94939291906115e5565b6100ab61014c36600461123f565b610a9e565b6100ab61015f36600461163e565b610d71565b6001600160a01b03841660009081526008602052604090206001815460ff166002811115610194576101946115cf565b036101d95760405162461bcd60e51b815260206004820152601060248201526f105b1c9958591e48185c1c1c9bdd995960821b60448201526064015b60405180910390fd5b8360ff1660028111156101ee576101ee6115cf565b8154829060ff1916600183600281111561020a5761020a6115cf565b0217905550336001600160a01b0316856001600160a01b03167f76dfcb7079d175d526d40b126e4a1cc466c3855e25ba5b37c3168609060e1d7886868660405161025693929190611697565b60405180910390a35050505050565b835180158015906102765750835181145b6102b75760405162461bcd60e51b81526020600482015260126024820152714d69736d617463686564206c656e6774687360701b60448201526064016101d0565b60005b818110156105f4576000835182106102e157604051806020016040528060008152506102fc565b8382815181106102f3576102f36116cf565b60200260200101515b905060006001600160a01b031687838151811061031b5761031b6116cf565b60200260200101516001600160a01b0316036103755760405162461bcd60e51b8152602060048201526019602482015278526563697069656e74206973207a65726f206164647265737360381b60448201526064016101d0565b6000868381518110610389576103896116cf565b602002602001015111801561041e57506040516370a0823160e01b81523060048201526001600160a01b038616906370a0823190602401602060405180830381865afa1580156103dd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061040191906116e5565b868381518110610413576104136116cf565b602002602001015111155b6104745760405162461bcd60e51b815260206004820152602160248201527f416d6f756e74206973207a65726f206f7220657863656564732062616c616e636044820152606560f81b60648201526084016101d0565b6104a8878381518110610489576104896116cf565b60200260200101518784815181106104a3576104a36116cf565b505050565b846001600160a01b031663a9059cbb8884815181106104c9576104c96116cf565b60200260200101518885815181106104e3576104e36116cf565b60200260200101516040518363ffffffff1660e01b815260040161051c9291906001600160a01b03929092168252602082015260400190565b6020604051808303816000875af115801561053b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055f91906116fe565b50868281518110610572576105726116cf565b60200260200101516001600160a01b0316306001600160a01b03167f68179208818f375bd941a067e321c35e8cebc048007cd126acd94625989a7b758885815181106105c0576105c06116cf565b602002602001015188856040516105d993929190611720565b60405180910390a350806105ec81611753565b9150506102ba565b505050505050565b816001600160a01b03167f7262fa021611ce5fba1be5b0e369cd9209c8d8408b2f67329285403f6d5a048d8260405161063591906117be565b60405180910390a25050565b6001600160a01b0383811660009081526008602052604090205461010090041633146106af5760405162461bcd60e51b815260206004820152601760248201527f4d757374206265206f776e657220746f2075706461746500000000000000000060448201526064016101d0565b6001600160a01b03831660009081526008602052604090206001016106d48382611912565b506001600160a01b03831660009081526008602052604090206002016106fa8282611912565b50336001600160a01b0316836001600160a01b03167f639b764af06689bf35c6ebc1ae49051aa4b4d3a3d34d5c70bf8626087352e99d84846040516107409291906119d1565b60405180910390a3505050565b60018054600354600454600554600780546001600160a01b03958616969486169590931693919261077d90611892565b80601f01602080910402602001604051908101604052809291908181526020018280546107a990611892565b80156107f65780601f106107cb576101008083540402835291602001916107f6565b820191906000526020600020905b8154815290600101906020018083116107d957829003601f168201915b5050505050905085565b6001600160a01b03838116600090815260086020526040902054610100900416156108625760405162461bcd60e51b8152602060048201526012602482015271105b1c9958591e481c9959da5cdd195c995960721b60448201526064016101d0565b60408051608081018252600080825233602080840191909152828401869052606083018590526001600160a01b0387168252600890529190912081518154829060ff191660018360028111156108ba576108ba6115cf565b0217905550602082015181546001600160a01b0390911661010002610100600160a81b0319909116178155604082015160018201906108f99082611912565b506060820151600282019061090e9082611912565b50905050336001600160a01b0316836001600160a01b03167f99202cc5abf24650e7ac53e3a81ff614768dcc7569a245376ed82eb4ce243fca84846040516107409291906119d1565b6008602052600090815260409020805460018201805460ff8316936101009093046001600160a01b031692919061098d90611892565b80601f01602080910402602001604051908101604052809291908181526020018280546109b990611892565b8015610a065780601f106109db57610100808354040283529160200191610a06565b820191906000526020600020905b8154815290600101906020018083116109e957829003601f168201915b505050505090806002018054610a1b90611892565b80601f0160208091040260200160405190810160405280929190818152602001828054610a4790611892565b8015610a945780601f10610a6957610100808354040283529160200191610a94565b820191906000526020600020905b815481529060010190602001808311610a7757829003601f168201915b5050505050905084565b83518015801590610aaf5750835181145b610af05760405162461bcd60e51b81526020600482015260126024820152714d69736d617463686564206c656e6774687360701b60448201526064016101d0565b60005b818110156105f457600083518210610b1a5760405180602001604052806000815250610b35565b838281518110610b2c57610b2c6116cf565b60200260200101515b905060006001600160a01b0316878381518110610b5457610b546116cf565b60200260200101516001600160a01b031603610bae5760405162461bcd60e51b8152602060048201526019602482015278526563697069656e74206973207a65726f206164647265737360381b60448201526064016101d0565b6000868381518110610bc257610bc26116cf565b602002602001015111610c085760405162461bcd60e51b815260206004820152600e60248201526d416d6f756e74206973207a65726f60901b60448201526064016101d0565b610c1d878381518110610489576104896116cf565b846001600160a01b03166323b872dd33898581518110610c3f57610c3f6116cf565b6020026020010151898681518110610c5957610c596116cf565b60209081029190910101516040516001600160e01b031960e086901b1681526001600160a01b03938416600482015292909116602483015260448201526064016020604051808303816000875af1158015610cb8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cdc91906116fe565b50868281518110610cef57610cef6116cf565b60200260200101516001600160a01b0316336001600160a01b03167f68179208818f375bd941a067e321c35e8cebc048007cd126acd94625989a7b75888581518110610d3d57610d3d6116cf565b60200260200101518885604051610d5693929190611720565b60405180910390a35080610d6981611753565b915050610af3565b60005460ff1615610dba5760405162461bcd60e51b8152602060048201526013602482015272105b1c9958591e481a5b9a5d1a585b1a5e9959606a1b60448201526064016101d0565b60008054600160ff199091168117909155825181546001600160a01b0319166001600160a01b039091161781556020808401518051859392610e0192600292910190610e7d565b5060408201516002820180546001600160a01b039283166001600160a01b03199182161790915560608401516003840180549190931691161790556080820151600482015560a08201518051610e61916005840191602090910190610ee2565b5060c08201516006820190610e769082611912565b5050505050565b828054828255906000526020600020908101928215610ed2579160200282015b82811115610ed257825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190610e9d565b50610ede929150610f91565b5090565b82805482825590600052602060002090600301600490048101928215610ed25791602002820160005b83821115610f5557835183826101000a8154816001600160401b0302191690836001600160401b031602179055509260200192600801602081600701049283019260010302610f0b565b8015610f885782816101000a8154906001600160401b030219169055600801602081600701049283019260010302610f55565b5050610ede9291505b5b80821115610ede5760008155600101610f92565b80356001600160a01b0381168114610fbd57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60405160e081016001600160401b0381118282101715610ffa57610ffa610fc2565b60405290565b604051601f8201601f191681016001600160401b038111828210171561102857611028610fc2565b604052919050565b600082601f83011261104157600080fd5b81356001600160401b0381111561105a5761105a610fc2565b61106d601f8201601f1916602001611000565b81815284602083860101111561108257600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080608085870312156110b557600080fd5b6110be85610fa6565b9350602085013560ff811681146110d457600080fd5b925060408501356001600160401b03808211156110f057600080fd5b6110fc88838901611030565b9350606087013591508082111561111257600080fd5b5061111f87828801611030565b91505092959194509250565b60006001600160401b0382111561114457611144610fc2565b5060051b60200190565b600082601f83011261115f57600080fd5b8135602061117461116f8361112b565b611000565b82815260059290921b8401810191818101908684111561119357600080fd5b8286015b848110156111b5576111a881610fa6565b8352918301918301611197565b509695505050505050565b600082601f8301126111d157600080fd5b813560206111e161116f8361112b565b82815260059290921b8401810191818101908684111561120057600080fd5b8286015b848110156111b55780356001600160401b038111156112235760008081fd5b6112318986838b0101611030565b845250918301918301611204565b6000806000806080858703121561125557600080fd5b84356001600160401b038082111561126c57600080fd5b6112788883890161114e565b955060209150818701358181111561128f57600080fd5b8701601f810189136112a057600080fd5b80356112ae61116f8261112b565b81815260059190911b8201840190848101908b8311156112cd57600080fd5b928501925b828410156112eb578335825292850192908501906112d2565b97506112fd9250505060408801610fa6565b9350606087013591508082111561131357600080fd5b5061111f878288016111c0565b600082601f83011261133157600080fd5b8135602061134161116f8361112b565b82815260059290921b8401810191818101908684111561136057600080fd5b8286015b848110156111b55780356001600160401b03811681146113845760008081fd5b8352918301918301611364565b600060e082840312156113a357600080fd5b6113ab610fd8565b90506113b682610fa6565b815260208201356001600160401b03808211156113d257600080fd5b6113de8583860161114e565b60208401526113ef60408501610fa6565b604084015261140060608501610fa6565b60608401526080840135608084015260a084013591508082111561142357600080fd5b61142f85838601611320565b60a084015260c084013591508082111561144857600080fd5b5061145584828501611030565b60c08301525092915050565b6000806040838503121561147457600080fd5b61147d83610fa6565b915060208301356001600160401b0381111561149857600080fd5b6114a485828601611391565b9150509250929050565b6000806000606084860312156114c357600080fd5b6114cc84610fa6565b925060208401356001600160401b03808211156114e857600080fd5b6114f487838801611030565b9350604086013591508082111561150a57600080fd5b5061151786828701611030565b9150509250925092565b6000815180845260005b818110156115475760208185018101518683018201520161152b565b506000602082860101526020601f19601f83011685010191505092915050565b6001600160a01b0386811682528581166020830152841660408201526060810183905260a0608082018190526000906115a290830184611521565b979650505050505050565b6000602082840312156115bf57600080fd5b6115c882610fa6565b9392505050565b634e487b7160e01b600052602160045260246000fd5b60006003861061160557634e487b7160e01b600052602160045260246000fd5b8582526001600160a01b038516602083015260806040830181905261162c90830185611521565b82810360608401526115a28185611521565b6000806040838503121561165157600080fd5b82356001600160401b038082111561166857600080fd5b61167486838701611391565b9350602085013591508082111561168a57600080fd5b506114a485828601611030565b60ff841681526060602082015260006116b36060830185611521565b82810360408401526116c58185611521565b9695505050505050565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156116f757600080fd5b5051919050565b60006020828403121561171057600080fd5b815180151581146115c857600080fd5b8381526001600160a01b038316602082015260606040820181905260009061174a90830184611521565b95945050505050565b60006001820161177357634e487b7160e01b600052601160045260246000fd5b5060010190565b600081518084526020808501945080840160005b838110156117b35781516001600160401b03168752958201959082019060010161178e565b509495945050505050565b602080825282516001600160a01b03908116838301528382015160e060408501528051610100850181905260009392918301919084906101208701905b8083101561181d578451841682529385019360019290920191908501906117fb565b5060408801516001600160a01b0381166060890152945060608801516001600160a01b03811660808901529450608088015160a088015260a08801519450601f199350838782030160c0880152611874818661177a565b945050505060c0850151818584030160e08601526116c58382611521565b600181811c908216806118a657607f821691505b6020821081036118c657634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156104a357600081815260208120601f850160051c810160208610156118f35750805b601f850160051c820191505b818110156105f4578281556001016118ff565b81516001600160401b0381111561192b5761192b610fc2565b61193f816119398454611892565b846118cc565b602080601f831160018114611974576000841561195c5750858301515b600019600386901b1c1916600185901b1785556105f4565b600085815260208120601f198616915b828110156119a357888601518255948401946001909101908401611984565b50858210156119c15787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6040815260006119e46040830185611521565b828103602084015261174a818561152156fea2646970667358221220b72d98a5b76968a5959412f9e2b6c553fc16eb2194d2416c20901d69457aae8564736f6c63430008140033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100935760003560e01c806379502c551161006657806379502c55146100e657806379b881af14610108578063942e6bcf1461011b5780639cdd2f9a1461013e578063ab21f5071461015157600080fd5b80631cf30254146100985780632628fb1c146100ad5780635587a37e146100c05780635cf90985146100d3575b600080fd5b6100ab6100a636600461109f565b610164565b005b6100ab6100bb36600461123f565b610265565b6100ab6100ce366004611461565b6105fc565b6100ab6100e13660046114ae565b610641565b6100ee61074d565b6040516100ff959493929190611567565b60405180910390f35b6100ab6101163660046114ae565b610800565b61012e6101293660046115ad565b610957565b6040516100ff94939291906115e5565b6100ab61014c36600461123f565b610a9e565b6100ab61015f36600461163e565b610d71565b6001600160a01b03841660009081526008602052604090206001815460ff166002811115610194576101946115cf565b036101d95760405162461bcd60e51b815260206004820152601060248201526f105b1c9958591e48185c1c1c9bdd995960821b60448201526064015b60405180910390fd5b8360ff1660028111156101ee576101ee6115cf565b8154829060ff1916600183600281111561020a5761020a6115cf565b0217905550336001600160a01b0316856001600160a01b03167f76dfcb7079d175d526d40b126e4a1cc466c3855e25ba5b37c3168609060e1d7886868660405161025693929190611697565b60405180910390a35050505050565b835180158015906102765750835181145b6102b75760405162461bcd60e51b81526020600482015260126024820152714d69736d617463686564206c656e6774687360701b60448201526064016101d0565b60005b818110156105f4576000835182106102e157604051806020016040528060008152506102fc565b8382815181106102f3576102f36116cf565b60200260200101515b905060006001600160a01b031687838151811061031b5761031b6116cf565b60200260200101516001600160a01b0316036103755760405162461bcd60e51b8152602060048201526019602482015278526563697069656e74206973207a65726f206164647265737360381b60448201526064016101d0565b6000868381518110610389576103896116cf565b602002602001015111801561041e57506040516370a0823160e01b81523060048201526001600160a01b038616906370a0823190602401602060405180830381865afa1580156103dd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061040191906116e5565b868381518110610413576104136116cf565b602002602001015111155b6104745760405162461bcd60e51b815260206004820152602160248201527f416d6f756e74206973207a65726f206f7220657863656564732062616c616e636044820152606560f81b60648201526084016101d0565b6104a8878381518110610489576104896116cf565b60200260200101518784815181106104a3576104a36116cf565b505050565b846001600160a01b031663a9059cbb8884815181106104c9576104c96116cf565b60200260200101518885815181106104e3576104e36116cf565b60200260200101516040518363ffffffff1660e01b815260040161051c9291906001600160a01b03929092168252602082015260400190565b6020604051808303816000875af115801561053b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055f91906116fe565b50868281518110610572576105726116cf565b60200260200101516001600160a01b0316306001600160a01b03167f68179208818f375bd941a067e321c35e8cebc048007cd126acd94625989a7b758885815181106105c0576105c06116cf565b602002602001015188856040516105d993929190611720565b60405180910390a350806105ec81611753565b9150506102ba565b505050505050565b816001600160a01b03167f7262fa021611ce5fba1be5b0e369cd9209c8d8408b2f67329285403f6d5a048d8260405161063591906117be565b60405180910390a25050565b6001600160a01b0383811660009081526008602052604090205461010090041633146106af5760405162461bcd60e51b815260206004820152601760248201527f4d757374206265206f776e657220746f2075706461746500000000000000000060448201526064016101d0565b6001600160a01b03831660009081526008602052604090206001016106d48382611912565b506001600160a01b03831660009081526008602052604090206002016106fa8282611912565b50336001600160a01b0316836001600160a01b03167f639b764af06689bf35c6ebc1ae49051aa4b4d3a3d34d5c70bf8626087352e99d84846040516107409291906119d1565b60405180910390a3505050565b60018054600354600454600554600780546001600160a01b03958616969486169590931693919261077d90611892565b80601f01602080910402602001604051908101604052809291908181526020018280546107a990611892565b80156107f65780601f106107cb576101008083540402835291602001916107f6565b820191906000526020600020905b8154815290600101906020018083116107d957829003601f168201915b5050505050905085565b6001600160a01b03838116600090815260086020526040902054610100900416156108625760405162461bcd60e51b8152602060048201526012602482015271105b1c9958591e481c9959da5cdd195c995960721b60448201526064016101d0565b60408051608081018252600080825233602080840191909152828401869052606083018590526001600160a01b0387168252600890529190912081518154829060ff191660018360028111156108ba576108ba6115cf565b0217905550602082015181546001600160a01b0390911661010002610100600160a81b0319909116178155604082015160018201906108f99082611912565b506060820151600282019061090e9082611912565b50905050336001600160a01b0316836001600160a01b03167f99202cc5abf24650e7ac53e3a81ff614768dcc7569a245376ed82eb4ce243fca84846040516107409291906119d1565b6008602052600090815260409020805460018201805460ff8316936101009093046001600160a01b031692919061098d90611892565b80601f01602080910402602001604051908101604052809291908181526020018280546109b990611892565b8015610a065780601f106109db57610100808354040283529160200191610a06565b820191906000526020600020905b8154815290600101906020018083116109e957829003601f168201915b505050505090806002018054610a1b90611892565b80601f0160208091040260200160405190810160405280929190818152602001828054610a4790611892565b8015610a945780601f10610a6957610100808354040283529160200191610a94565b820191906000526020600020905b815481529060010190602001808311610a7757829003601f168201915b5050505050905084565b83518015801590610aaf5750835181145b610af05760405162461bcd60e51b81526020600482015260126024820152714d69736d617463686564206c656e6774687360701b60448201526064016101d0565b60005b818110156105f457600083518210610b1a5760405180602001604052806000815250610b35565b838281518110610b2c57610b2c6116cf565b60200260200101515b905060006001600160a01b0316878381518110610b5457610b546116cf565b60200260200101516001600160a01b031603610bae5760405162461bcd60e51b8152602060048201526019602482015278526563697069656e74206973207a65726f206164647265737360381b60448201526064016101d0565b6000868381518110610bc257610bc26116cf565b602002602001015111610c085760405162461bcd60e51b815260206004820152600e60248201526d416d6f756e74206973207a65726f60901b60448201526064016101d0565b610c1d878381518110610489576104896116cf565b846001600160a01b03166323b872dd33898581518110610c3f57610c3f6116cf565b6020026020010151898681518110610c5957610c596116cf565b60209081029190910101516040516001600160e01b031960e086901b1681526001600160a01b03938416600482015292909116602483015260448201526064016020604051808303816000875af1158015610cb8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cdc91906116fe565b50868281518110610cef57610cef6116cf565b60200260200101516001600160a01b0316336001600160a01b03167f68179208818f375bd941a067e321c35e8cebc048007cd126acd94625989a7b75888581518110610d3d57610d3d6116cf565b60200260200101518885604051610d5693929190611720565b60405180910390a35080610d6981611753565b915050610af3565b60005460ff1615610dba5760405162461bcd60e51b8152602060048201526013602482015272105b1c9958591e481a5b9a5d1a585b1a5e9959606a1b60448201526064016101d0565b60008054600160ff199091168117909155825181546001600160a01b0319166001600160a01b039091161781556020808401518051859392610e0192600292910190610e7d565b5060408201516002820180546001600160a01b039283166001600160a01b03199182161790915560608401516003840180549190931691161790556080820151600482015560a08201518051610e61916005840191602090910190610ee2565b5060c08201516006820190610e769082611912565b5050505050565b828054828255906000526020600020908101928215610ed2579160200282015b82811115610ed257825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190610e9d565b50610ede929150610f91565b5090565b82805482825590600052602060002090600301600490048101928215610ed25791602002820160005b83821115610f5557835183826101000a8154816001600160401b0302191690836001600160401b031602179055509260200192600801602081600701049283019260010302610f0b565b8015610f885782816101000a8154906001600160401b030219169055600801602081600701049283019260010302610f55565b5050610ede9291505b5b80821115610ede5760008155600101610f92565b80356001600160a01b0381168114610fbd57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60405160e081016001600160401b0381118282101715610ffa57610ffa610fc2565b60405290565b604051601f8201601f191681016001600160401b038111828210171561102857611028610fc2565b604052919050565b600082601f83011261104157600080fd5b81356001600160401b0381111561105a5761105a610fc2565b61106d601f8201601f1916602001611000565b81815284602083860101111561108257600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080608085870312156110b557600080fd5b6110be85610fa6565b9350602085013560ff811681146110d457600080fd5b925060408501356001600160401b03808211156110f057600080fd5b6110fc88838901611030565b9350606087013591508082111561111257600080fd5b5061111f87828801611030565b91505092959194509250565b60006001600160401b0382111561114457611144610fc2565b5060051b60200190565b600082601f83011261115f57600080fd5b8135602061117461116f8361112b565b611000565b82815260059290921b8401810191818101908684111561119357600080fd5b8286015b848110156111b5576111a881610fa6565b8352918301918301611197565b509695505050505050565b600082601f8301126111d157600080fd5b813560206111e161116f8361112b565b82815260059290921b8401810191818101908684111561120057600080fd5b8286015b848110156111b55780356001600160401b038111156112235760008081fd5b6112318986838b0101611030565b845250918301918301611204565b6000806000806080858703121561125557600080fd5b84356001600160401b038082111561126c57600080fd5b6112788883890161114e565b955060209150818701358181111561128f57600080fd5b8701601f810189136112a057600080fd5b80356112ae61116f8261112b565b81815260059190911b8201840190848101908b8311156112cd57600080fd5b928501925b828410156112eb578335825292850192908501906112d2565b97506112fd9250505060408801610fa6565b9350606087013591508082111561131357600080fd5b5061111f878288016111c0565b600082601f83011261133157600080fd5b8135602061134161116f8361112b565b82815260059290921b8401810191818101908684111561136057600080fd5b8286015b848110156111b55780356001600160401b03811681146113845760008081fd5b8352918301918301611364565b600060e082840312156113a357600080fd5b6113ab610fd8565b90506113b682610fa6565b815260208201356001600160401b03808211156113d257600080fd5b6113de8583860161114e565b60208401526113ef60408501610fa6565b604084015261140060608501610fa6565b60608401526080840135608084015260a084013591508082111561142357600080fd5b61142f85838601611320565b60a084015260c084013591508082111561144857600080fd5b5061145584828501611030565b60c08301525092915050565b6000806040838503121561147457600080fd5b61147d83610fa6565b915060208301356001600160401b0381111561149857600080fd5b6114a485828601611391565b9150509250929050565b6000806000606084860312156114c357600080fd5b6114cc84610fa6565b925060208401356001600160401b03808211156114e857600080fd5b6114f487838801611030565b9350604086013591508082111561150a57600080fd5b5061151786828701611030565b9150509250925092565b6000815180845260005b818110156115475760208185018101518683018201520161152b565b506000602082860101526020601f19601f83011685010191505092915050565b6001600160a01b0386811682528581166020830152841660408201526060810183905260a0608082018190526000906115a290830184611521565b979650505050505050565b6000602082840312156115bf57600080fd5b6115c882610fa6565b9392505050565b634e487b7160e01b600052602160045260246000fd5b60006003861061160557634e487b7160e01b600052602160045260246000fd5b8582526001600160a01b038516602083015260806040830181905261162c90830185611521565b82810360608401526115a28185611521565b6000806040838503121561165157600080fd5b82356001600160401b038082111561166857600080fd5b61167486838701611391565b9350602085013591508082111561168a57600080fd5b506114a485828601611030565b60ff841681526060602082015260006116b36060830185611521565b82810360408401526116c58185611521565b9695505050505050565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156116f757600080fd5b5051919050565b60006020828403121561171057600080fd5b815180151581146115c857600080fd5b8381526001600160a01b038316602082015260606040820181905260009061174a90830184611521565b95945050505050565b60006001820161177357634e487b7160e01b600052601160045260246000fd5b5060010190565b600081518084526020808501945080840160005b838110156117b35781516001600160401b03168752958201959082019060010161178e565b509495945050505050565b602080825282516001600160a01b03908116838301528382015160e060408501528051610100850181905260009392918301919084906101208701905b8083101561181d578451841682529385019360019290920191908501906117fb565b5060408801516001600160a01b0381166060890152945060608801516001600160a01b03811660808901529450608088015160a088015260a08801519450601f199350838782030160c0880152611874818661177a565b945050505060c0850151818584030160e08601526116c58382611521565b600181811c908216806118a657607f821691505b6020821081036118c657634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156104a357600081815260208120601f850160051c810160208610156118f35750805b601f850160051c820191505b818110156105f4578281556001016118ff565b81516001600160401b0381111561192b5761192b610fc2565b61193f816119398454611892565b846118cc565b602080601f831160018114611974576000841561195c5750858301515b600019600386901b1c1916600185901b1785556105f4565b600085815260208120601f198616915b828110156119a357888601518255948401946001909101908401611984565b50858210156119c15787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6040815260006119e46040830185611521565b828103602084015261174a818561152156fea2646970667358221220b72d98a5b76968a5959412f9e2b6c553fc16eb2194d2416c20901d69457aae8564736f6c63430008140033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1430,
        "contract": "contracts/Pool.sol:Pool",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 1433,
        "contract": "contracts/Pool.sol:Pool",
        "label": "config",
        "offset": 0,
        "slot": "1",
        "type": "t_struct(PoolConfig)1276_storage"
      },
      {
        "astId": 1438,
        "contract": "contracts/Pool.sol:Pool",
        "label": "registrations",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_struct(Registration)1290_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint64)dyn_storage": {
        "base": "t_uint64",
        "encoding": "dynamic_array",
        "label": "uint64[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes_storage": {
        "encoding": "bytes",
        "label": "bytes",
        "numberOfBytes": "32"
      },
      "t_enum(Status)1280": {
        "encoding": "inplace",
        "label": "enum IPool.Status",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_struct(Registration)1290_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct IPool.Registration)",
        "numberOfBytes": "32",
        "value": "t_struct(Registration)1290_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(PoolConfig)1276_storage": {
        "encoding": "inplace",
        "label": "struct PoolConfig",
        "members": [
          {
            "astId": 1261,
            "contract": "contracts/Pool.sol:Pool",
            "label": "owner",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 1264,
            "contract": "contracts/Pool.sol:Pool",
            "label": "admins",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_address)dyn_storage"
          },
          {
            "astId": 1266,
            "contract": "contracts/Pool.sol:Pool",
            "label": "allocationToken",
            "offset": 0,
            "slot": "2",
            "type": "t_address"
          },
          {
            "astId": 1268,
            "contract": "contracts/Pool.sol:Pool",
            "label": "distributionToken",
            "offset": 0,
            "slot": "3",
            "type": "t_address"
          },
          {
            "astId": 1270,
            "contract": "contracts/Pool.sol:Pool",
            "label": "maxAmount",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 1273,
            "contract": "contracts/Pool.sol:Pool",
            "label": "timestamps",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_uint64)dyn_storage"
          },
          {
            "astId": 1275,
            "contract": "contracts/Pool.sol:Pool",
            "label": "metadataURI",
            "offset": 0,
            "slot": "6",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "224"
      },
      "t_struct(Registration)1290_storage": {
        "encoding": "inplace",
        "label": "struct IPool.Registration",
        "members": [
          {
            "astId": 1283,
            "contract": "contracts/Pool.sol:Pool",
            "label": "status",
            "offset": 0,
            "slot": "0",
            "type": "t_enum(Status)1280"
          },
          {
            "astId": 1285,
            "contract": "contracts/Pool.sol:Pool",
            "label": "owner",
            "offset": 1,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 1287,
            "contract": "contracts/Pool.sol:Pool",
            "label": "metadataURI",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 1289,
            "contract": "contracts/Pool.sol:Pool",
            "label": "data",
            "offset": 0,
            "slot": "2",
            "type": "t_bytes_storage"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint64": {
        "encoding": "inplace",
        "label": "uint64",
        "numberOfBytes": "8"
      }
    }
  }
}
{
  "address": "0x0c523c801EbB0023F9d6D39244EB05ec3DC61b9d",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_schema",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_metadataURI",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "Allocate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "updater",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address[]",
              "name": "admins",
              "type": "address[]"
            },
            {
              "internalType": "address",
              "name": "allocationToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "distributionToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "maxAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint64[]",
              "name": "timestamps",
              "type": "uint64[]"
            },
            {
              "internalType": "string",
              "name": "metadataURI",
              "type": "string"
            }
          ],
          "indexed": false,
          "internalType": "struct PoolConfig",
          "name": "config",
          "type": "tuple"
        }
      ],
      "name": "Configure",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "schema",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "metadataURI",
          "type": "string"
        }
      ],
      "name": "Deployed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "project",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "metadataURI",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "Register",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "project",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "status",
          "type": "uint8"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "metadataURI",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "Review",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "project",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "updater",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "metadataURI",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "Update",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "recipients",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        }
      ],
      "name": "allocate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "config",
      "outputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "allocationToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "distributionToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "maxAmount",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "metadataURI",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "updater",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address[]",
              "name": "admins",
              "type": "address[]"
            },
            {
              "internalType": "address",
              "name": "allocationToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "distributionToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "maxAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint64[]",
              "name": "timestamps",
              "type": "uint64[]"
            },
            {
              "internalType": "string",
              "name": "metadataURI",
              "type": "string"
            }
          ],
          "internalType": "struct PoolConfig",
          "name": "_config",
          "type": "tuple"
        }
      ],
      "name": "configure",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "recipients",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        }
      ],
      "name": "distribute",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address[]",
              "name": "admins",
              "type": "address[]"
            },
            {
              "internalType": "address",
              "name": "allocationToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "distributionToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "maxAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint64[]",
              "name": "timestamps",
              "type": "uint64[]"
            },
            {
              "internalType": "string",
              "name": "metadataURI",
              "type": "string"
            }
          ],
          "internalType": "struct PoolConfig",
          "name": "_config",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "project",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "metadataURI",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "register",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "registrations",
      "outputs": [
        {
          "internalType": "enum IPool.Status",
          "name": "status",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "metadataURI",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "project",
          "type": "address"
        },
        {
          "internalType": "uint8",
          "name": "status",
          "type": "uint8"
        },
        {
          "internalType": "string",
          "name": "metadataURI",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "review",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "project",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "metadataURI",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "update",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x4b20f67dbc33aae7e2b8a24f6e8d7c29c8225f43b7f0cfa83ab81f17add215a9",
  "receipt": {
    "to": null,
    "from": "0x8595e36857743A1C517e00179e6bA6D170DD1F51",
    "contractAddress": "0x0c523c801EbB0023F9d6D39244EB05ec3DC61b9d",
    "transactionIndex": 5,
    "gasUsed": "1575187",
    "logsBloom": "0x
    "blockHash": "0xa4aced4da927e1d16440b42fa31cd14074de65d83cd52197106eb8452e66de09",
    "transactionHash": "0x4b20f67dbc33aae7e2b8a24f6e8d7c29c8225f43b7f0cfa83ab81f17add215a9",
    "logs": [
      {
        "transactionIndex": 5,
        "blockNumber": 27014118,
        "transactionHash": "0x4b20f67dbc33aae7e2b8a24f6e8d7c29c8225f43b7f0cfa83ab81f17add215a9",
        "address": "0x0c523c801EbB0023F9d6D39244EB05ec3DC61b9d",
        "topics": [
          "0x72aeb8e4e073b2b6fc374bc9e1acd0b59d25c19bc96e662f34e973d1ad9ff9fc",
          "0x0000000000000000000000008595e36857743a1c517e00179e6ba6d170dd1f51"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
        "logIndex": 18,
        "blockHash": "0xa4aced4da927e1d16440b42fa31cd14074de65d83cd52197106eb8452e66de09"
      }
    ],
    "blockNumber": 27014118,
    "cumulativeGasUsed": "2568565",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "",
    "",
    {
      "owner": "0x8595e36857743A1C517e00179e6bA6D170DD1F51",
      "allocationToken": "0x0000000000000000000000000000000000000000",
      "distributionToken": "0x0000000000000000000000000000000000000000",
      "maxAmount": "0",
      "metadataURI": "",
      "admins": [],
      "timestamps": []
    }
  ],
  "numDeployments": 3,
  "solcInputHash": "c584f6ec978b3e6e9aeb79db4893b9b4",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_schema\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_metadataURI\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Allocate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"updater\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"admins\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"allocationToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"distributionToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint64[]\",\"name\":\"timestamps\",\"type\":\"uint64[]\"},{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"}],\"indexed\":false,\"internalType\":\"struct PoolConfig\",\"name\":\"config\",\"type\":\"tuple\"}],\"name\":\"Configure\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"schema\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"}],\"name\":\"Deployed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"project\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Register\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"project\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"status\",\"type\":\"uint8\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Review\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"project\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"updater\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Update\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"allocate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"config\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"allocationToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"distributionToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"updater\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"admins\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"allocationToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"distributionToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint64[]\",\"name\":\"timestamps\",\"type\":\"uint64[]\"},{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"}],\"internalType\":\"struct PoolConfig\",\"name\":\"_config\",\"type\":\"tuple\"}],\"name\":\"configure\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"distribute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"admins\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"allocationToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"distributionToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint64[]\",\"name\":\"timestamps\",\"type\":\"uint64[]\"},{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"}],\"internalType\":\"struct PoolConfig\",\"name\":\"_config\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"project\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"register\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"registrations\",\"outputs\":[{\"internalType\":\"enum IPool.Status\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"project\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"review\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"project\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"update\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Pool.sol\":\"Pool\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"contracts/Pool.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {IERC20} from \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\nstruct PoolConfig {\\n    address owner;\\n    address[] admins;\\n    address allocationToken;\\n    address distributionToken;\\n    uint256 maxAmount;\\n    uint64[] timestamps;\\n    string metadataURI;\\n}\\n\\ninterface IPool {\\n    enum Status {\\n        pending,\\n        approved,\\n        rejected\\n    }\\n\\n    struct Registration {\\n        Status status;\\n        address owner;\\n        string metadataURI;\\n        bytes data; // Data can contain information that can be accessed later\\n    }\\n\\n    event Deployed(string name, address indexed owner, string schema, string metadataURI);\\n    event Allocate(address indexed from, address indexed to, uint256 amount, address token, bytes data);\\n    event Register(address indexed project, address indexed owner, string metadataURI, bytes data);\\n    event Review(address indexed project, uint8 status, address indexed approver, string metadataURI, bytes data);\\n    event Update(address indexed project, address indexed updater, string metadataURI, bytes data);\\n    event Configure(address indexed updater, PoolConfig config);\\n\\n    function initialize(PoolConfig memory config, bytes memory data) external;\\n    function configure(address updater, PoolConfig memory config) external;\\n    function register(address project, string memory metadataURI, bytes memory data) external;\\n    function update(address project, string memory metadataURI, bytes memory data) external;\\n    function review(address project, uint8 status, string memory metadataURI, bytes memory data) external;\\n    function allocate(address[] memory recipients, uint256[] memory amounts, address token, bytes[] memory data)\\n        external;\\n    function distribute(address[] memory recipients, uint256[] memory amounts, address token, bytes[] memory data)\\n        external;\\n}\\n\\n/*\\nTypes of Pools:\\nDirectGrants - pool manager transfer funds directly to projects\\nRetroFunding - selected voters vote on projects and pool gets distributed based on the votes\\nQuadraticFunding - people vote with money tokens and get matching funds from the pool based on quadratic formula\\nDedicatedDomainAllocation - selected panel of domain experts decide what projects receive matching funds\\nRFPs\\nBounties\\nCrowdfunding\\n*/\\ncontract Pool is IPool {\\n    bool private _initialized;\\n    PoolConfig public config;\\n\\n    mapping(address => Registration) public registrations;\\n\\n    constructor(string memory _name, string memory _schema, string memory _metadataURI) {\\n        // Emit an event for the Indexer so Pools can be created with this Strategy\\n        emit Deployed(_name, msg.sender, _schema, _metadataURI);\\n    }\\n\\n    function initialize(PoolConfig memory _config, bytes memory) public virtual {\\n        require(!_initialized, \\\"Already initialized\\\");\\n        _initialized = true;\\n        config = _config;\\n    }\\n\\n    function _configure(address _updater, PoolConfig memory _config) internal virtual {\\n        // Logic for updating the Pool handled in calling contract\\n        config = _config;\\n        emit Configure(_updater, _config);\\n    }\\n\\n    // MetadataURI contain details about project application\\n    function _register(address project, string memory _metadataURI, bytes memory data) internal {\\n        require(registrations[project].owner == address(0), \\\"Already registered\\\");\\n        registrations[project] = Registration(Status.pending, msg.sender, _metadataURI, data);\\n        emit Register(project, msg.sender, _metadataURI, data);\\n    }\\n\\n    function _review(address project, uint8 status, string memory _metadataURI, bytes memory data) internal {\\n        Registration storage registration = registrations[project];\\n        registration.status = Status(status);\\n        // MetadataURI can contain information about review, or potential rejection reason\\n        emit Review(project, status, msg.sender, _metadataURI, data);\\n    }\\n\\n    function _update(address project, string memory _metadataURI, bytes memory data) internal {\\n        require(registrations[project].owner == msg.sender, \\\"Must be owner to update\\\");\\n        require(registrations[project].status != Status.approved, \\\"Already approved\\\");\\n        registrations[project].metadataURI = _metadataURI;\\n        registrations[project].data = data;\\n        emit Update(project, msg.sender, _metadataURI, data);\\n    }\\n\\n    // Allocate tokens to recipients (transfers tokens from caller to recipients)\\n    // This can be used to transfer tokens to projects, or the contract itself to fund with matching funds for example\\n    function _allocate(address[] memory recipients, uint256[] memory amounts, address token, bytes[] memory data)\\n        internal\\n    {\\n        uint256 length = recipients.length;\\n        require(length > 0 && length == amounts.length, \\\"Mismatched lengths\\\");\\n\\n        for (uint256 i = 0; i < length; i++) {\\n            bytes memory _data = i < data.length ? data[i] : bytes(\\\"\\\");\\n            require(recipients[i] != address(0), \\\"Recipient is zero address\\\");\\n            require(amounts[i] > 0, \\\"Amount is zero\\\");\\n            _beforeAllocate(recipients[i], amounts[i], token, _data);\\n            IERC20(token).transferFrom(msg.sender, recipients[i], amounts[i]);\\n            emit Allocate(msg.sender, recipients[i], amounts[i], token, _data);\\n        }\\n    }\\n\\n    // Distribute tokens to recipients (transfers tokens from the contract to recipients)\\n    // Can be used to distribute matching funds to projects\\n    function _distribute(address[] memory recipients, uint256[] memory amounts, address token, bytes[] memory data)\\n        internal\\n    {\\n        uint256 length = recipients.length;\\n        require(length > 0 && length == amounts.length, \\\"Mismatched lengths\\\");\\n\\n        for (uint256 i = 0; i < length; i++) {\\n            bytes memory _data = i < data.length ? data[i] : bytes(\\\"\\\");\\n            require(recipients[i] != address(0), \\\"Recipient is zero address\\\");\\n            require(\\n                amounts[i] > 0 && amounts[i] <= IERC20(token).balanceOf(address(this)),\\n                \\\"Amount is zero or exceeds balance\\\"\\n            );\\n            _beforeDistribute(recipients[i], amounts[i], token, _data);\\n            IERC20(token).transfer(recipients[i], amounts[i]);\\n            emit Allocate(address(this), recipients[i], amounts[i], token, _data);\\n        }\\n    }\\n\\n    function _beforeAllocate(address recipient, uint256 amount, address token, bytes memory data) internal virtual {}\\n    function _beforeDistribute(address recipient, uint256 amount, address token, bytes memory data) internal virtual {}\\n\\n    function configure(address updater, PoolConfig memory _config) external virtual override {\\n        _configure(updater, _config);\\n    }\\n\\n    function register(address project, string memory metadataURI, bytes memory data) external virtual override {\\n        _register(project, metadataURI, data);\\n    }\\n\\n    function update(address project, string memory metadataURI, bytes memory data) external virtual override {\\n        _update(project, metadataURI, data);\\n    }\\n\\n    function review(address project, uint8 status, string memory metadataURI, bytes memory data)\\n        external\\n        virtual\\n        override\\n    {\\n        _review(project, status, metadataURI, data);\\n    }\\n\\n    function allocate(address[] memory recipients, uint256[] memory amounts, address token, bytes[] memory data)\\n        external\\n        virtual\\n        override\\n    {\\n        _allocate(recipients, amounts, token, data);\\n    }\\n\\n    function distribute(address[] memory recipients, uint256[] memory amounts, address token, bytes[] memory data)\\n        external\\n        virtual\\n        override\\n    {\\n        _distribute(recipients, amounts, token, data);\\n    }\\n}\\n\",\"keccak256\":\"0xf00fc9ca6a37176356e381c840d92b70eff83e418f8881988e0e2787f10f3012\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162001da438038062001da4833981016040819052620000349162000151565b336001600160a01b03167f72aeb8e4e073b2b6fc374bc9e1acd0b59d25c19bc96e662f34e973d1ad9ff9fc848484604051620000739392919062000210565b60405180910390a25050506200024f565b634e487b7160e01b600052604160045260246000fd5b60005b83811015620000b75781810151838201526020016200009d565b50506000910152565b600082601f830112620000d257600080fd5b81516001600160401b0380821115620000ef57620000ef62000084565b604051601f8301601f19908116603f011681019082821181831017156200011a576200011a62000084565b816040528381528660208588010111156200013457600080fd5b620001478460208301602089016200009a565b9695505050505050565b6000806000606084860312156200016757600080fd5b83516001600160401b03808211156200017f57600080fd5b6200018d87838801620000c0565b94506020860151915080821115620001a457600080fd5b620001b287838801620000c0565b93506040860151915080821115620001c957600080fd5b50620001d886828701620000c0565b9150509250925092565b60008151808452620001fc8160208601602086016200009a565b601f01601f19169290920160200192915050565b606081526000620002256060830186620001e2565b8281036020840152620002398186620001e2565b90508281036040840152620001478185620001e2565b611b45806200025f6000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063942e6bcf11610066578063942e6bcf146100f5578063ab21f50714610118578063b7b54d651461012b578063c922da541461013e578063eede8aea1461015157600080fd5b80635808677514610098578063747ffca2146100ad57806379502c55146100c0578063906b89c6146100e2575b600080fd5b6100ab6100a63660046111b8565b610164565b005b6100ab6100bb36600461133f565b610174565b6100c8610186565b6040516100d9959493929190611472565b60405180910390f35b6100ab6100f03660046114b8565b610239565b610108610103366004611538565b610245565b6040516100d99493929190611570565b6100ab61012636600461170a565b61038c565b6100ab61013936600461176d565b61049d565b6100ab61014c3660046111b8565b6104ab565b6100ab61015f36600461133f565b6104b6565b61016f8383836104c2565b505050565b61018084848484610626565b50505050565b60018054600354600454600554600780546001600160a01b0395861696948616959093169391926101b6906117b0565b80601f01602080910402602001604051908101604052809291908181526020018280546101e2906117b0565b801561022f5780601f106102045761010080835404028352916020019161022f565b820191906000526020600020905b81548152906001019060200180831161021257829003601f168201915b5050505050905085565b610180848484846109b8565b6008602052600090815260409020805460018201805460ff8316936101009093046001600160a01b031692919061027b906117b0565b80601f01602080910402602001604051908101604052809291908181526020018280546102a7906117b0565b80156102f45780601f106102c9576101008083540402835291602001916102f4565b820191906000526020600020905b8154815290600101906020018083116102d757829003601f168201915b505050505090806002018054610309906117b0565b80601f0160208091040260200160405190810160405280929190818152602001828054610335906117b0565b80156103825780601f1061035757610100808354040283529160200191610382565b820191906000526020600020905b81548152906001019060200180831161036557829003601f168201915b5050505050905084565b60005460ff16156103da5760405162461bcd60e51b8152602060048201526013602482015272105b1c9958591e481a5b9a5d1a585b1a5e9959606a1b60448201526064015b60405180910390fd5b60008054600160ff199091168117909155825181546001600160a01b0319166001600160a01b03909116178155602080840151805185939261042192600292910190610f96565b5060408201516002820180546001600160a01b039283166001600160a01b03199182161790915560608401516003840180549190931691161790556080820151600482015560a08201518051610481916005840191602090910190610ffb565b5060c082015160068201906104969082611830565b5050505050565b6104a78282610a5c565b5050565b61016f838383610b55565b61018084848484610cc3565b6001600160a01b03838116600090815260086020526040902054610100900416156105245760405162461bcd60e51b8152602060048201526012602482015271105b1c9958591e481c9959da5cdd195c995960721b60448201526064016103d1565b60408051608081018252600080825233602080840191909152828401869052606083018590526001600160a01b0387168252600890529190912081518154829060ff1916600183600281111561057c5761057c61155a565b0217905550602082015181546001600160a01b0390911661010002610100600160a81b0319909116178155604082015160018201906105bb9082611830565b50606082015160028201906105d09082611830565b50905050336001600160a01b0316836001600160a01b03167f99202cc5abf24650e7ac53e3a81ff614768dcc7569a245376ed82eb4ce243fca84846040516106199291906118ef565b60405180910390a3505050565b835180158015906106375750835181145b6106785760405162461bcd60e51b81526020600482015260126024820152714d69736d617463686564206c656e6774687360701b60448201526064016103d1565b60005b818110156109b0576000835182106106a257604051806020016040528060008152506106bd565b8382815181106106b4576106b461191d565b60200260200101515b905060006001600160a01b03168783815181106106dc576106dc61191d565b60200260200101516001600160a01b0316036107365760405162461bcd60e51b8152602060048201526019602482015278526563697069656e74206973207a65726f206164647265737360381b60448201526064016103d1565b600086838151811061074a5761074a61191d565b60200260200101511180156107df57506040516370a0823160e01b81523060048201526001600160a01b038616906370a0823190602401602060405180830381865afa15801561079e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c29190611933565b8683815181106107d4576107d461191d565b602002602001015111155b6108355760405162461bcd60e51b815260206004820152602160248201527f416d6f756e74206973207a65726f206f7220657863656564732062616c616e636044820152606560f81b60648201526084016103d1565b61086487838151811061084a5761084a61191d565b602002602001015187848151811061016f5761016f61191d565b846001600160a01b031663a9059cbb8884815181106108855761088561191d565b602002602001015188858151811061089f5761089f61191d565b60200260200101516040518363ffffffff1660e01b81526004016108d89291906001600160a01b03929092168252602082015260400190565b6020604051808303816000875af11580156108f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061091b919061194c565b5086828151811061092e5761092e61191d565b60200260200101516001600160a01b0316306001600160a01b03167f68179208818f375bd941a067e321c35e8cebc048007cd126acd94625989a7b7588858151811061097c5761097c61191d565b602002602001015188856040516109959392919061196e565b60405180910390a350806109a881611998565b91505061067b565b505050505050565b6001600160a01b038416600090815260086020526040902060ff841660028111156109e5576109e561155a565b8154829060ff19166001836002811115610a0157610a0161155a565b0217905550336001600160a01b0316856001600160a01b03167f76dfcb7079d175d526d40b126e4a1cc466c3855e25ba5b37c3168609060e1d78868686604051610a4d939291906119bf565b60405180910390a35050505050565b8051600180546001600160a01b0319166001600160a01b039092169190911781556020808301518051849392610a9792600292910190610f96565b5060408201516002820180546001600160a01b039283166001600160a01b03199182161790915560608401516003840180549190931691161790556080820151600482015560a08201518051610af7916005840191602090910190610ffb565b5060c08201516006820190610b0c9082611830565b50905050816001600160a01b03167f7262fa021611ce5fba1be5b0e369cd9209c8d8408b2f67329285403f6d5a048d82604051610b499190611a3b565b60405180910390a25050565b6001600160a01b038381166000908152600860205260409020546101009004163314610bc35760405162461bcd60e51b815260206004820152601760248201527f4d757374206265206f776e657220746f2075706461746500000000000000000060448201526064016103d1565b60016001600160a01b03841660009081526008602052604090205460ff166002811115610bf257610bf261155a565b03610c325760405162461bcd60e51b815260206004820152601060248201526f105b1c9958591e48185c1c1c9bdd995960821b60448201526064016103d1565b6001600160a01b0383166000908152600860205260409020600101610c578382611830565b506001600160a01b0383166000908152600860205260409020600201610c7d8282611830565b50336001600160a01b0316836001600160a01b03167f639b764af06689bf35c6ebc1ae49051aa4b4d3a3d34d5c70bf8626087352e99d84846040516106199291906118ef565b83518015801590610cd45750835181145b610d155760405162461bcd60e51b81526020600482015260126024820152714d69736d617463686564206c656e6774687360701b60448201526064016103d1565b60005b818110156109b057600083518210610d3f5760405180602001604052806000815250610d5a565b838281518110610d5157610d5161191d565b60200260200101515b905060006001600160a01b0316878381518110610d7957610d7961191d565b60200260200101516001600160a01b031603610dd35760405162461bcd60e51b8152602060048201526019602482015278526563697069656e74206973207a65726f206164647265737360381b60448201526064016103d1565b6000868381518110610de757610de761191d565b602002602001015111610e2d5760405162461bcd60e51b815260206004820152600e60248201526d416d6f756e74206973207a65726f60901b60448201526064016103d1565b610e4287838151811061084a5761084a61191d565b846001600160a01b03166323b872dd33898581518110610e6457610e6461191d565b6020026020010151898681518110610e7e57610e7e61191d565b60209081029190910101516040516001600160e01b031960e086901b1681526001600160a01b03938416600482015292909116602483015260448201526064016020604051808303816000875af1158015610edd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f01919061194c565b50868281518110610f1457610f1461191d565b60200260200101516001600160a01b0316336001600160a01b03167f68179208818f375bd941a067e321c35e8cebc048007cd126acd94625989a7b75888581518110610f6257610f6261191d565b60200260200101518885604051610f7b9392919061196e565b60405180910390a35080610f8e81611998565b915050610d18565b828054828255906000526020600020908101928215610feb579160200282015b82811115610feb57825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190610fb6565b50610ff79291506110aa565b5090565b82805482825590600052602060002090600301600490048101928215610feb5791602002820160005b8382111561106e57835183826101000a8154816001600160401b0302191690836001600160401b031602179055509260200192600801602081600701049283019260010302611024565b80156110a15782816101000a8154906001600160401b03021916905560080160208160070104928301926001030261106e565b5050610ff79291505b5b80821115610ff757600081556001016110ab565b80356001600160a01b03811681146110d657600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60405160e081016001600160401b0381118282101715611113576111136110db565b60405290565b604051601f8201601f191681016001600160401b0381118282101715611141576111416110db565b604052919050565b600082601f83011261115a57600080fd5b81356001600160401b03811115611173576111736110db565b611186601f8201601f1916602001611119565b81815284602083860101111561119b57600080fd5b816020850160208301376000918101602001919091529392505050565b6000806000606084860312156111cd57600080fd5b6111d6846110bf565b925060208401356001600160401b03808211156111f257600080fd5b6111fe87838801611149565b9350604086013591508082111561121457600080fd5b5061122186828701611149565b9150509250925092565b60006001600160401b03821115611244576112446110db565b5060051b60200190565b600082601f83011261125f57600080fd5b8135602061127461126f8361122b565b611119565b82815260059290921b8401810191818101908684111561129357600080fd5b8286015b848110156112b5576112a8816110bf565b8352918301918301611297565b509695505050505050565b600082601f8301126112d157600080fd5b813560206112e161126f8361122b565b82815260059290921b8401810191818101908684111561130057600080fd5b8286015b848110156112b55780356001600160401b038111156113235760008081fd5b6113318986838b0101611149565b845250918301918301611304565b6000806000806080858703121561135557600080fd5b84356001600160401b038082111561136c57600080fd5b6113788883890161124e565b955060209150818701358181111561138f57600080fd5b8701601f810189136113a057600080fd5b80356113ae61126f8261122b565b81815260059190911b8201840190848101908b8311156113cd57600080fd5b928501925b828410156113eb578335825292850192908501906113d2565b97506113fd92505050604088016110bf565b9350606087013591508082111561141357600080fd5b50611420878288016112c0565b91505092959194509250565b6000815180845260005b8181101561145257602081850181015186830182015201611436565b506000602082860101526020601f19601f83011685010191505092915050565b6001600160a01b0386811682528581166020830152841660408201526060810183905260a0608082018190526000906114ad9083018461142c565b979650505050505050565b600080600080608085870312156114ce57600080fd5b6114d7856110bf565b9350602085013560ff811681146114ed57600080fd5b925060408501356001600160401b038082111561150957600080fd5b61151588838901611149565b9350606087013591508082111561152b57600080fd5b5061142087828801611149565b60006020828403121561154a57600080fd5b611553826110bf565b9392505050565b634e487b7160e01b600052602160045260246000fd5b60006003861061159057634e487b7160e01b600052602160045260246000fd5b8582526001600160a01b03851660208301526080604083018190526115b79083018561142c565b82810360608401526114ad818561142c565b600082601f8301126115da57600080fd5b813560206115ea61126f8361122b565b82815260059290921b8401810191818101908684111561160957600080fd5b8286015b848110156112b55780356001600160401b038116811461162d5760008081fd5b835291830191830161160d565b600060e0828403121561164c57600080fd5b6116546110f1565b905061165f826110bf565b815260208201356001600160401b038082111561167b57600080fd5b6116878583860161124e565b6020840152611698604085016110bf565b60408401526116a9606085016110bf565b60608401526080840135608084015260a08401359150808211156116cc57600080fd5b6116d8858386016115c9565b60a084015260c08401359150808211156116f157600080fd5b506116fe84828501611149565b60c08301525092915050565b6000806040838503121561171d57600080fd5b82356001600160401b038082111561173457600080fd5b6117408683870161163a565b9350602085013591508082111561175657600080fd5b5061176385828601611149565b9150509250929050565b6000806040838503121561178057600080fd5b611789836110bf565b915060208301356001600160401b038111156117a457600080fd5b6117638582860161163a565b600181811c908216806117c457607f821691505b6020821081036117e457634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561016f57600081815260208120601f850160051c810160208610156118115750805b601f850160051c820191505b818110156109b05782815560010161181d565b81516001600160401b03811115611849576118496110db565b61185d8161185784546117b0565b846117ea565b602080601f831160018114611892576000841561187a5750858301515b600019600386901b1c1916600185901b1785556109b0565b600085815260208120601f198616915b828110156118c1578886015182559484019460019091019084016118a2565b50858210156118df5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b604081526000611902604083018561142c565b8281036020840152611914818561142c565b95945050505050565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561194557600080fd5b5051919050565b60006020828403121561195e57600080fd5b8151801515811461155357600080fd5b8381526001600160a01b03831660208201526060604082018190526000906119149083018461142c565b6000600182016119b857634e487b7160e01b600052601160045260246000fd5b5060010190565b60ff841681526060602082015260006119db606083018561142c565b82810360408401526119ed818561142c565b9695505050505050565b600081518084526020808501945080840160005b83811015611a305781516001600160401b031687529582019590820190600101611a0b565b509495945050505050565b602080825282516001600160a01b03908116838301528382015160e060408501528051610100850181905260009392918301919084906101208701905b80831015611a9a57845184168252938501936001929092019190850190611a78565b5060408801516001600160a01b0381166060890152945060608801516001600160a01b03811660808901529450608088015160a088015260a08801519450601f199350838782030160c0880152611af181866119f7565b945050505060c0850151818584030160e08601526119ed838261142c56fea26469706673582212200f90769e2713e23851ec0444e057a09aa6548b42726943dd303bd1b2db1b5b9a64736f6c63430008140033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100935760003560e01c8063942e6bcf11610066578063942e6bcf146100f5578063ab21f50714610118578063b7b54d651461012b578063c922da541461013e578063eede8aea1461015157600080fd5b80635808677514610098578063747ffca2146100ad57806379502c55146100c0578063906b89c6146100e2575b600080fd5b6100ab6100a63660046111b8565b610164565b005b6100ab6100bb36600461133f565b610174565b6100c8610186565b6040516100d9959493929190611472565b60405180910390f35b6100ab6100f03660046114b8565b610239565b610108610103366004611538565b610245565b6040516100d99493929190611570565b6100ab61012636600461170a565b61038c565b6100ab61013936600461176d565b61049d565b6100ab61014c3660046111b8565b6104ab565b6100ab61015f36600461133f565b6104b6565b61016f8383836104c2565b505050565b61018084848484610626565b50505050565b60018054600354600454600554600780546001600160a01b0395861696948616959093169391926101b6906117b0565b80601f01602080910402602001604051908101604052809291908181526020018280546101e2906117b0565b801561022f5780601f106102045761010080835404028352916020019161022f565b820191906000526020600020905b81548152906001019060200180831161021257829003601f168201915b5050505050905085565b610180848484846109b8565b6008602052600090815260409020805460018201805460ff8316936101009093046001600160a01b031692919061027b906117b0565b80601f01602080910402602001604051908101604052809291908181526020018280546102a7906117b0565b80156102f45780601f106102c9576101008083540402835291602001916102f4565b820191906000526020600020905b8154815290600101906020018083116102d757829003601f168201915b505050505090806002018054610309906117b0565b80601f0160208091040260200160405190810160405280929190818152602001828054610335906117b0565b80156103825780601f1061035757610100808354040283529160200191610382565b820191906000526020600020905b81548152906001019060200180831161036557829003601f168201915b5050505050905084565b60005460ff16156103da5760405162461bcd60e51b8152602060048201526013602482015272105b1c9958591e481a5b9a5d1a585b1a5e9959606a1b60448201526064015b60405180910390fd5b60008054600160ff199091168117909155825181546001600160a01b0319166001600160a01b03909116178155602080840151805185939261042192600292910190610f96565b5060408201516002820180546001600160a01b039283166001600160a01b03199182161790915560608401516003840180549190931691161790556080820151600482015560a08201518051610481916005840191602090910190610ffb565b5060c082015160068201906104969082611830565b5050505050565b6104a78282610a5c565b5050565b61016f838383610b55565b61018084848484610cc3565b6001600160a01b03838116600090815260086020526040902054610100900416156105245760405162461bcd60e51b8152602060048201526012602482015271105b1c9958591e481c9959da5cdd195c995960721b60448201526064016103d1565b60408051608081018252600080825233602080840191909152828401869052606083018590526001600160a01b0387168252600890529190912081518154829060ff1916600183600281111561057c5761057c61155a565b0217905550602082015181546001600160a01b0390911661010002610100600160a81b0319909116178155604082015160018201906105bb9082611830565b50606082015160028201906105d09082611830565b50905050336001600160a01b0316836001600160a01b03167f99202cc5abf24650e7ac53e3a81ff614768dcc7569a245376ed82eb4ce243fca84846040516106199291906118ef565b60405180910390a3505050565b835180158015906106375750835181145b6106785760405162461bcd60e51b81526020600482015260126024820152714d69736d617463686564206c656e6774687360701b60448201526064016103d1565b60005b818110156109b0576000835182106106a257604051806020016040528060008152506106bd565b8382815181106106b4576106b461191d565b60200260200101515b905060006001600160a01b03168783815181106106dc576106dc61191d565b60200260200101516001600160a01b0316036107365760405162461bcd60e51b8152602060048201526019602482015278526563697069656e74206973207a65726f206164647265737360381b60448201526064016103d1565b600086838151811061074a5761074a61191d565b60200260200101511180156107df57506040516370a0823160e01b81523060048201526001600160a01b038616906370a0823190602401602060405180830381865afa15801561079e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c29190611933565b8683815181106107d4576107d461191d565b602002602001015111155b6108355760405162461bcd60e51b815260206004820152602160248201527f416d6f756e74206973207a65726f206f7220657863656564732062616c616e636044820152606560f81b60648201526084016103d1565b61086487838151811061084a5761084a61191d565b602002602001015187848151811061016f5761016f61191d565b846001600160a01b031663a9059cbb8884815181106108855761088561191d565b602002602001015188858151811061089f5761089f61191d565b60200260200101516040518363ffffffff1660e01b81526004016108d89291906001600160a01b03929092168252602082015260400190565b6020604051808303816000875af11580156108f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061091b919061194c565b5086828151811061092e5761092e61191d565b60200260200101516001600160a01b0316306001600160a01b03167f68179208818f375bd941a067e321c35e8cebc048007cd126acd94625989a7b7588858151811061097c5761097c61191d565b602002602001015188856040516109959392919061196e565b60405180910390a350806109a881611998565b91505061067b565b505050505050565b6001600160a01b038416600090815260086020526040902060ff841660028111156109e5576109e561155a565b8154829060ff19166001836002811115610a0157610a0161155a565b0217905550336001600160a01b0316856001600160a01b03167f76dfcb7079d175d526d40b126e4a1cc466c3855e25ba5b37c3168609060e1d78868686604051610a4d939291906119bf565b60405180910390a35050505050565b8051600180546001600160a01b0319166001600160a01b039092169190911781556020808301518051849392610a9792600292910190610f96565b5060408201516002820180546001600160a01b039283166001600160a01b03199182161790915560608401516003840180549190931691161790556080820151600482015560a08201518051610af7916005840191602090910190610ffb565b5060c08201516006820190610b0c9082611830565b50905050816001600160a01b03167f7262fa021611ce5fba1be5b0e369cd9209c8d8408b2f67329285403f6d5a048d82604051610b499190611a3b565b60405180910390a25050565b6001600160a01b038381166000908152600860205260409020546101009004163314610bc35760405162461bcd60e51b815260206004820152601760248201527f4d757374206265206f776e657220746f2075706461746500000000000000000060448201526064016103d1565b60016001600160a01b03841660009081526008602052604090205460ff166002811115610bf257610bf261155a565b03610c325760405162461bcd60e51b815260206004820152601060248201526f105b1c9958591e48185c1c1c9bdd995960821b60448201526064016103d1565b6001600160a01b0383166000908152600860205260409020600101610c578382611830565b506001600160a01b0383166000908152600860205260409020600201610c7d8282611830565b50336001600160a01b0316836001600160a01b03167f639b764af06689bf35c6ebc1ae49051aa4b4d3a3d34d5c70bf8626087352e99d84846040516106199291906118ef565b83518015801590610cd45750835181145b610d155760405162461bcd60e51b81526020600482015260126024820152714d69736d617463686564206c656e6774687360701b60448201526064016103d1565b60005b818110156109b057600083518210610d3f5760405180602001604052806000815250610d5a565b838281518110610d5157610d5161191d565b60200260200101515b905060006001600160a01b0316878381518110610d7957610d7961191d565b60200260200101516001600160a01b031603610dd35760405162461bcd60e51b8152602060048201526019602482015278526563697069656e74206973207a65726f206164647265737360381b60448201526064016103d1565b6000868381518110610de757610de761191d565b602002602001015111610e2d5760405162461bcd60e51b815260206004820152600e60248201526d416d6f756e74206973207a65726f60901b60448201526064016103d1565b610e4287838151811061084a5761084a61191d565b846001600160a01b03166323b872dd33898581518110610e6457610e6461191d565b6020026020010151898681518110610e7e57610e7e61191d565b60209081029190910101516040516001600160e01b031960e086901b1681526001600160a01b03938416600482015292909116602483015260448201526064016020604051808303816000875af1158015610edd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f01919061194c565b50868281518110610f1457610f1461191d565b60200260200101516001600160a01b0316336001600160a01b03167f68179208818f375bd941a067e321c35e8cebc048007cd126acd94625989a7b75888581518110610f6257610f6261191d565b60200260200101518885604051610f7b9392919061196e565b60405180910390a35080610f8e81611998565b915050610d18565b828054828255906000526020600020908101928215610feb579160200282015b82811115610feb57825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190610fb6565b50610ff79291506110aa565b5090565b82805482825590600052602060002090600301600490048101928215610feb5791602002820160005b8382111561106e57835183826101000a8154816001600160401b0302191690836001600160401b031602179055509260200192600801602081600701049283019260010302611024565b80156110a15782816101000a8154906001600160401b03021916905560080160208160070104928301926001030261106e565b5050610ff79291505b5b80821115610ff757600081556001016110ab565b80356001600160a01b03811681146110d657600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60405160e081016001600160401b0381118282101715611113576111136110db565b60405290565b604051601f8201601f191681016001600160401b0381118282101715611141576111416110db565b604052919050565b600082601f83011261115a57600080fd5b81356001600160401b03811115611173576111736110db565b611186601f8201601f1916602001611119565b81815284602083860101111561119b57600080fd5b816020850160208301376000918101602001919091529392505050565b6000806000606084860312156111cd57600080fd5b6111d6846110bf565b925060208401356001600160401b03808211156111f257600080fd5b6111fe87838801611149565b9350604086013591508082111561121457600080fd5b5061122186828701611149565b9150509250925092565b60006001600160401b03821115611244576112446110db565b5060051b60200190565b600082601f83011261125f57600080fd5b8135602061127461126f8361122b565b611119565b82815260059290921b8401810191818101908684111561129357600080fd5b8286015b848110156112b5576112a8816110bf565b8352918301918301611297565b509695505050505050565b600082601f8301126112d157600080fd5b813560206112e161126f8361122b565b82815260059290921b8401810191818101908684111561130057600080fd5b8286015b848110156112b55780356001600160401b038111156113235760008081fd5b6113318986838b0101611149565b845250918301918301611304565b6000806000806080858703121561135557600080fd5b84356001600160401b038082111561136c57600080fd5b6113788883890161124e565b955060209150818701358181111561138f57600080fd5b8701601f810189136113a057600080fd5b80356113ae61126f8261122b565b81815260059190911b8201840190848101908b8311156113cd57600080fd5b928501925b828410156113eb578335825292850192908501906113d2565b97506113fd92505050604088016110bf565b9350606087013591508082111561141357600080fd5b50611420878288016112c0565b91505092959194509250565b6000815180845260005b8181101561145257602081850181015186830182015201611436565b506000602082860101526020601f19601f83011685010191505092915050565b6001600160a01b0386811682528581166020830152841660408201526060810183905260a0608082018190526000906114ad9083018461142c565b979650505050505050565b600080600080608085870312156114ce57600080fd5b6114d7856110bf565b9350602085013560ff811681146114ed57600080fd5b925060408501356001600160401b038082111561150957600080fd5b61151588838901611149565b9350606087013591508082111561152b57600080fd5b5061142087828801611149565b60006020828403121561154a57600080fd5b611553826110bf565b9392505050565b634e487b7160e01b600052602160045260246000fd5b60006003861061159057634e487b7160e01b600052602160045260246000fd5b8582526001600160a01b03851660208301526080604083018190526115b79083018561142c565b82810360608401526114ad818561142c565b600082601f8301126115da57600080fd5b813560206115ea61126f8361122b565b82815260059290921b8401810191818101908684111561160957600080fd5b8286015b848110156112b55780356001600160401b038116811461162d5760008081fd5b835291830191830161160d565b600060e0828403121561164c57600080fd5b6116546110f1565b905061165f826110bf565b815260208201356001600160401b038082111561167b57600080fd5b6116878583860161124e565b6020840152611698604085016110bf565b60408401526116a9606085016110bf565b60608401526080840135608084015260a08401359150808211156116cc57600080fd5b6116d8858386016115c9565b60a084015260c08401359150808211156116f157600080fd5b506116fe84828501611149565b60c08301525092915050565b6000806040838503121561171d57600080fd5b82356001600160401b038082111561173457600080fd5b6117408683870161163a565b9350602085013591508082111561175657600080fd5b5061176385828601611149565b9150509250929050565b6000806040838503121561178057600080fd5b611789836110bf565b915060208301356001600160401b038111156117a457600080fd5b6117638582860161163a565b600181811c908216806117c457607f821691505b6020821081036117e457634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561016f57600081815260208120601f850160051c810160208610156118115750805b601f850160051c820191505b818110156109b05782815560010161181d565b81516001600160401b03811115611849576118496110db565b61185d8161185784546117b0565b846117ea565b602080601f831160018114611892576000841561187a5750858301515b600019600386901b1c1916600185901b1785556109b0565b600085815260208120601f198616915b828110156118c1578886015182559484019460019091019084016118a2565b50858210156118df5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b604081526000611902604083018561142c565b8281036020840152611914818561142c565b95945050505050565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561194557600080fd5b5051919050565b60006020828403121561195e57600080fd5b8151801515811461155357600080fd5b8381526001600160a01b03831660208201526060604082018190526000906119149083018461142c565b6000600182016119b857634e487b7160e01b600052601160045260246000fd5b5060010190565b60ff841681526060602082015260006119db606083018561142c565b82810360408401526119ed818561142c565b9695505050505050565b600081518084526020808501945080840160005b83811015611a305781516001600160401b031687529582019590820190600101611a0b565b509495945050505050565b602080825282516001600160a01b03908116838301528382015160e060408501528051610100850181905260009392918301919084906101208701905b80831015611a9a57845184168252938501936001929092019190850190611a78565b5060408801516001600160a01b0381166060890152945060608801516001600160a01b03811660808901529450608088015160a088015260a08801519450601f199350838782030160c0880152611af181866119f7565b945050505060c0850151818584030160e08601526119ed838261142c56fea26469706673582212200f90769e2713e23851ec0444e057a09aa6548b42726943dd303bd1b2db1b5b9a64736f6c63430008140033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1429,
        "contract": "contracts/Pool.sol:Pool",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 1432,
        "contract": "contracts/Pool.sol:Pool",
        "label": "config",
        "offset": 0,
        "slot": "1",
        "type": "t_struct(PoolConfig)1276_storage"
      },
      {
        "astId": 1437,
        "contract": "contracts/Pool.sol:Pool",
        "label": "registrations",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_struct(Registration)1290_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint64)dyn_storage": {
        "base": "t_uint64",
        "encoding": "dynamic_array",
        "label": "uint64[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes_storage": {
        "encoding": "bytes",
        "label": "bytes",
        "numberOfBytes": "32"
      },
      "t_enum(Status)1280": {
        "encoding": "inplace",
        "label": "enum IPool.Status",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_struct(Registration)1290_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct IPool.Registration)",
        "numberOfBytes": "32",
        "value": "t_struct(Registration)1290_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(PoolConfig)1276_storage": {
        "encoding": "inplace",
        "label": "struct PoolConfig",
        "members": [
          {
            "astId": 1261,
            "contract": "contracts/Pool.sol:Pool",
            "label": "owner",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 1264,
            "contract": "contracts/Pool.sol:Pool",
            "label": "admins",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_address)dyn_storage"
          },
          {
            "astId": 1266,
            "contract": "contracts/Pool.sol:Pool",
            "label": "allocationToken",
            "offset": 0,
            "slot": "2",
            "type": "t_address"
          },
          {
            "astId": 1268,
            "contract": "contracts/Pool.sol:Pool",
            "label": "distributionToken",
            "offset": 0,
            "slot": "3",
            "type": "t_address"
          },
          {
            "astId": 1270,
            "contract": "contracts/Pool.sol:Pool",
            "label": "maxAmount",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 1273,
            "contract": "contracts/Pool.sol:Pool",
            "label": "timestamps",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_uint64)dyn_storage"
          },
          {
            "astId": 1275,
            "contract": "contracts/Pool.sol:Pool",
            "label": "metadataURI",
            "offset": 0,
            "slot": "6",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "224"
      },
      "t_struct(Registration)1290_storage": {
        "encoding": "inplace",
        "label": "struct IPool.Registration",
        "members": [
          {
            "astId": 1283,
            "contract": "contracts/Pool.sol:Pool",
            "label": "status",
            "offset": 0,
            "slot": "0",
            "type": "t_enum(Status)1280"
          },
          {
            "astId": 1285,
            "contract": "contracts/Pool.sol:Pool",
            "label": "owner",
            "offset": 1,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 1287,
            "contract": "contracts/Pool.sol:Pool",
            "label": "metadataURI",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 1289,
            "contract": "contracts/Pool.sol:Pool",
            "label": "data",
            "offset": 0,
            "slot": "2",
            "type": "t_bytes_storage"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint64": {
        "encoding": "inplace",
        "label": "uint64",
        "numberOfBytes": "8"
      }
    }
  }
}